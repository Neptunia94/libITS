Main folder for the ITS library.

In this folder are the support classes for the library.
Most important are definition of the ITSModel and the notions of Type and Instance.
Some transversal support files (Naming, Cacher, Ordering) are also housed here.

The ITSModel serves as factory and referential for the creation of types from their formalism specific descriptions. 
The description of a type is split into its syntax (e.g. Composite, TPNet...) and its SDD/ITS semantics (e.g. CompositeType, TPNetType...)

Subfolders for ITS type implementations :
1* petri : Petri nets and Time Petri nets

(we have many parser for TPN due to historical reasons/support for interchange)
** parser_CAMI : parser for PN in CAMI syntax (PNDDD based)
** parser_json : parser for JSON hierarchy/order description files (as built by Silien Hong's heuristics python module)
** parser_RdPE : parser for PROD format (PNDDD based)
** prod :  parser for PROD format (ITS based)

2* composite : Composite type definition, concepts such as synchronizations...

3* scalar : Scalar and Circular set definitions

"Modern" type definitions use XML based formats (read using libexpat), although a human readable output (not input) is available through the print operation (member of Type, or available in the ITSModel).



