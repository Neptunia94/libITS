AC_PREREQ([2.19])
AC_INIT([ITSSDD],[0.1],[Yann.Thierry-mieg@lip6.fr])
# We use automake to build makefiles

AM_INIT_AUTOMAKE([-Wall -Werror foreign])

# option to indicate libddd folder
AC_ARG_WITH([libddd],
            [AC_HELP_STRING([--with-libddd=/root/of/libddd],
                            [specify the path of libddd])])

AM_CONDITIONAL([WITH_LIBDDD_PATH], [test "x${with_libddd}" != x])
if test "x${with_libddd}" != x; then
    AC_SUBST([LIBDDD_ROOT],[${with_libddd}])
fi


# option to indicate libexpat folder
AC_ARG_WITH([libexpat],
            [AC_HELP_STRING([--with-libexpat=/root/of/libexpat],
                            [specify the path of libexpat])])


AM_CONDITIONAL([WITH_LIBEXPAT_PATH], [test "x${with_libexpat}" != x])
if test "x${with_libexpat}" != x; then
    AC_SUBST([LIBEXPAT_ROOT],[${with_libexpat}])
fi


# M4 macros location
AC_CONFIG_MACRO_DIR([m4])

# programs used to build
# we make static libs (use ranlib)
AC_PROG_RANLIB

# we compile C++
# set Cxx compilation flags to either the value passed in
# ./configure --cxxflags=
# or none to change behavior from default cxx flags generated by autoconf
# default : -02 -g
test -z "$CFLAGS" && CFLAGS=
test -z "$CXXFLAGS" && CXXFLAGS=

#compile in C++
AC_PROG_CC
AC_PROG_CXX
AC_LANG(C++)

#use bison/flex parsers
AM_PROG_LEX
AC_PROG_YACC

# Enable boost if found:
AX_CHECK_BOOST([1.31], [103100])
AM_CONDITIONAL([HAVE_BOOST], [test "${BOOST_DETECTED}" = "true"])

# define HAS_STDC_HEADERS
AC_HEADER_STDC

AC_CHECK_TOOL([STRIP],[strip])

# automake :
# build these Makefile using the Makefile.in files in each directory
AC_CONFIG_FILES([
  Makefile
  src/Makefile
  lib/Makefile
  src/expression/Makefile
  src/parser_RdPE/Makefile
  src/parser_CAMI/Makefile
  demo/Makefile
  bin/Makefile
  Samples/Makefile
  Samples/prod/Makefile
  Samples/prod/Generators/Makefile			
  Samples/prod/Generators/CiardoPN2000/Makefile
  Samples/prod/Generators/Other/Makefile
])

# Do it !! (mandatory)
AC_OUTPUT
